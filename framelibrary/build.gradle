plugins {
    id 'com.android.library'
}

android {
    def androidRoot = rootProject.ext.android

    compileSdkVersion androidRoot.compileSdkVersion
    buildToolsVersion androidRoot.buildToolsVersion

    defaultConfig {
        minSdkVersion androidRoot.minSdkVersion
        targetSdkVersion androidRoot.targetSdkVersion
        versionCode androidRoot.versionCode
        versionName androidRoot.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility androidRoot.JavaVersion
        targetCompatibility androidRoot.JavaVersion
    }
}

dependencies {

    def dependRoot = rootProject.ext.dependVersion

    implementation 'androidx.appcompat:appcompat:' + dependRoot.appcompat
    implementation 'com.google.android.material:material:' + dependRoot.material
    api project(path: ':BaseLibrary')
    testImplementation 'junit:junit:' + dependRoot.junit
    androidTestImplementation 'androidx.test.ext:junit:' + dependRoot.testJunit
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + dependRoot.espressoCore
}